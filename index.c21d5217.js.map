{"mappings":"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","sources":["src/js/films-section.js","src/js/searchbar.js"],"sourcesContent":["export const apiKey = '004a3a7ad0ebfa9ee53f6d0ac407af43';\nexport const apiUrlBase = 'https://api.themoviedb.org/3';\n\nasync function fetchData(endpoint) {\n  const apiUrl = `${apiUrlBase}/${endpoint}?api_key=${apiKey}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error at ${apiUrl}`, error);\n  }\n}\n\nasync function getPopularMovies() {\n  return fetchData('trending/movie/week');\n}\n\nasync function getGenres() {\n  return fetchData('genre/movie/list');\n}\n\nfunction roundRating(rating) {\n  const roundedRating =\n    Math.abs(rating % 1) >= 0.005\n      ? Math.ceil(rating * 100) / 100\n      : Math.floor(rating * 100) / 100;\n  return roundedRating;\n}\n\nasync function displayMovies() {\n  const mainContent = document.getElementById('main-content');\n\n  const moviesContainer = document.createElement('div');\n  moviesContainer.classList.add('movies');\n\n  const movieContainer = document.createElement('div');\n  movieContainer.id = 'movie-container';\n\n  moviesContainer.appendChild(movieContainer);\n\n  mainContent.appendChild(moviesContainer);\n\n  const movies = await getPopularMovies();\n  const genres = await getGenres();\n\n  movies.results.forEach(async movie => {\n    const movieDetails = await fetchData(`movie/${movie.id}`);\n\n    const rating = movieDetails.vote_average;\n    const popularity = movieDetails.popularity;\n    const genresArray = movieDetails.genres.map(genre => genre.name);\n    const description = movieDetails.overview;\n\n    const movieCard = document.createElement('div');\n    movieCard.classList.add('movie-card');\n\n    const movieImage = document.createElement('img');\n    movieImage.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    movieImage.alt = `${movie.title} Poster`;\n    movieImage.classList.add('movie-image');\n\n    const movieDescription = document.createElement('div');\n    movieDescription.classList.add('movie-description');\n\n    const movieTitle = document.createElement('h2');\n    movieTitle.textContent = movie.title;\n    movieTitle.classList.add('movie-title');\n\n    const ratingSpan = document.createElement('span');\n    ratingSpan.classList.add('rating');\n    ratingSpan.textContent = ` ${roundRating(rating)}`;\n\n    const movieGenreYearRating = document.createElement('p');\n    movieGenreYearRating.innerHTML = `${genresArray.slice(0, 2).join(', ')}, ${\n      genresArray.length > 2 ? 'Other' : ''\n    } | ${movie.release_date ? movie.release_date.substring(0, 4) : 'N/A'} | `;\n    movieGenreYearRating.appendChild(ratingSpan);\n    movieGenreYearRating.classList.add('movie-details');\n\n    movieDescription.appendChild(movieTitle);\n    movieDescription.appendChild(movieGenreYearRating);\n\n    movieCard.appendChild(movieImage);\n    movieCard.appendChild(movieDescription);\n\n    movieCard.addEventListener('click', () =>\n      openMovieModal(\n        movie.title,\n        movie.poster_path,\n        roundRating(rating),\n        popularity,\n        genresArray,\n        description\n      )\n    );\n\n    movieContainer.appendChild(movieCard);\n  });\n}\n\nexport function openMovieModal(\n  movieTitle,\n  posterPath,\n  rating,\n  popularity,\n  genres,\n  description\n) {\n  const modalBackdrop = document.createElement('div');\n  modalBackdrop.classList.add('modal-backdrop');\n\n  modalBackdrop.addEventListener('click', event => {\n    if (event.target === modalBackdrop) {\n      closeModal(modalBackdrop);\n    }\n  });\n\n  const modalContent = document.createElement('div');\n  modalContent.classList.add('modal-content');\n\n  const movieImage = document.createElement('img');\n  movieImage.src = `https://image.tmdb.org/t/p/w500/${posterPath}`;\n  movieImage.alt = `${movieTitle} Poster`;\n  movieImage.classList.add('movie-image');\n\n  const modalTitle = document.createElement('h2');\n  modalTitle.textContent = movieTitle;\n\n  const closeButton = document.createElement('button');\n  closeButton.classList.add('close-button');\n  closeButton.addEventListener('click', () => closeModal(modalBackdrop));\n\n  const modalMovieDescription = document.createElement('div');\n  modalMovieDescription.classList.add('modal-movie-description');\n\n  const descriptionParagraph = document.createElement('p');\n  descriptionParagraph.innerHTML = `<b>ABOUT:</b>`;\n  const descriptionContent = document.createElement('p');\n  descriptionContent.textContent = description;\n\n  const statsContainer = document.createElement('div');\n  statsContainer.classList.add('movie-modal-stats');\n\n  const tagsContainer = document.createElement('div');\n  tagsContainer.classList.add('movie-modal-tags');\n\n  const resultsContainer = document.createElement('div');\n  resultsContainer.classList.add('movie-modal-results');\n\n  const ratingTag = document.createElement('span');\n  ratingTag.textContent = 'Rating:';\n  const ratingResult = document.createElement('span');\n  ratingResult.classList.add('rating');\n  ratingResult.textContent = rating;\n\n  const popularityTag = document.createElement('span');\n  popularityTag.textContent = 'Popularity:';\n  const popularityResult = document.createElement('span');\n  popularityResult.textContent = popularity;\n\n  const genresTag = document.createElement('span');\n  genresTag.textContent = 'Genres:';\n  const genresResult = document.createElement('span');\n  genresResult.textContent = genres.join(', ');\n\n  tagsContainer.appendChild(ratingTag);\n  tagsContainer.appendChild(popularityTag);\n  tagsContainer.appendChild(genresTag);\n\n  resultsContainer.appendChild(ratingResult);\n  resultsContainer.appendChild(popularityResult);\n  resultsContainer.appendChild(genresResult);\n\n  statsContainer.appendChild(tagsContainer);\n  statsContainer.appendChild(resultsContainer);\n\n  modalMovieDescription.appendChild(modalTitle);\n  modalMovieDescription.appendChild(statsContainer);\n\n  modalMovieDescription.appendChild(descriptionParagraph);\n  modalMovieDescription.appendChild(descriptionContent);\n\n  const buttonsContainer = document.createElement('div');\n  buttonsContainer.classList.add('modal-buttons');\n\n  const addToWatchedButton = createButton(\n    'ADD TO WATCHED',\n    'movie-watched-btn'\n  );\n  const addToQueueButton = createButton('ADD TO QUEUE', 'movie-queue-btn');\n\n  buttonsContainer.appendChild(addToWatchedButton);\n  buttonsContainer.appendChild(addToQueueButton);\n\n  modalMovieDescription.appendChild(buttonsContainer);\n\n  modalContent.appendChild(movieImage);\n  modalContent.appendChild(modalMovieDescription);\n  modalContent.appendChild(closeButton);\n\n  modalBackdrop.appendChild(modalContent);\n  document.body.appendChild(modalBackdrop);\n\n  modalBackdrop.style.display = 'flex';\n  document.body.style.overflow = 'hidden';\n}\n\nfunction closeModal(modalBackdrop) {\n  modalBackdrop.style.display = 'none';\n  document.body.style.overflow = '';\n  modalBackdrop.remove();\n}\n\nfunction createButton(text, className) {\n  const button = document.createElement('button');\n  button.textContent = text;\n  button.classList.add(className);\n  return button;\n}\n\nwindow.onload = displayMovies;\n","// searchbar.js\nimport { apiKey, apiUrlBase } from './api-key.js';\nimport {openMovieModal} from './films-section.js'\nasync function fetchData(url, options) {\n  try {\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return null;\n  }\n}\n\nasync function getMovies(endpoint) {\n  const apiUrl = `${apiUrlBase}/${endpoint}?api_key=${apiKey}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error at ${apiUrl}`, error);\n  }\n}\n\nasync function getGenres() {\n  return getMovies('/genre/movie/list');\n}\n\nasync function getPopularMovies() {\n  return getMovies('/trending/movie/week');\n}\n\nasync function searchMovies(title) {\n  const apiUrl = `${apiUrlBase}/search/movie?api_key=${apiKey}&query=${title}&language=en-US&include_adult=false&page=1`;\n\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return await fetchData(apiUrl, options);\n}\n\nfunction roundRating(rating) {\n  const roundedRating =\n    Math.abs(rating % 1) >= 0.005\n      ? Math.ceil(rating * 100) / 100\n      : Math.floor(rating * 100) / 100;\n  return roundedRating;\n}\n\nasync function searchAndDisplayMovies(title) {\n  let movies;\n  if (title) {\n    movies = await searchMovies(title);\n  } else {\n    movies = await getPopularMovies();\n  }\n\n  const moviesContainer = document.getElementById('movie-container');\n  moviesContainer.innerHTML = '';\n\n  if (movies.results.length === 0) {\n    const errorMessage = document.createElement('p');\n    errorMessage.textContent = 'Nu s-au găsit filme pentru căutarea dată.';\n    moviesContainer.appendChild(errorMessage);\n    document.querySelector('.movies').hidden = true;\n  } else {\n    document.querySelector('.movies').remove();\n    const moviesContainer = document.createElement('div');\n    moviesContainer.classList.add('movies');\n\n    const movieContainer = document.createElement('div');\n    movieContainer.id = 'movie-container';\n\n    moviesContainer.appendChild(movieContainer);\n\n    document.body.appendChild(moviesContainer);\n\n    const genres = await getGenres();\n\n    movies.results.forEach(movie => {\n      createMovieCard(movie, genres, movieContainer);\n    });\n  }\n}\n\nfunction createMovieCard(movie, genres, movieContainer) {\n  const movieCard = document.createElement('div');\n  movieCard.classList.add('movie-card');\n\n  const movieImage = document.createElement('img');\n  movieImage.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n  movieImage.alt = `${movie.title} Poster`;\n  movieImage.classList.add('movie-image');\n\n  const movieDescription = document.createElement('div');\n  movieDescription.classList.add('movie-description');\n\n  const movieTitle = document.createElement('h2');\n  movieTitle.textContent = movie.title;\n  movieTitle.classList.add('movie-title');\n\n  const movieGenres = movie.genre_ids.map(genreId => {\n    const genre = genres.genres.find(g => g.id === genreId);\n    return genre ? genre.name : '';\n  });\n\n  const displayedGenres = movieGenres.slice(0, 2);\n  const otherGenres = movieGenres.slice(2);\n\n  const roundedRating = roundRating(movie.vote_average);\n\n  const movieGenreYearRating = document.createElement('p');\n\n  const ratingSpan = document.createElement('span');\n  ratingSpan.classList.add('rating');\n  ratingSpan.textContent = ` ${roundedRating}`;\n\n  if (otherGenres.length > 0) {\n    movieGenreYearRating.innerHTML = `${displayedGenres.join(', ')}, Other | ${\n      movie.release_date ? movie.release_date.substring(0, 4) : 'N/A'\n    } | `;\n  } else {\n    movieGenreYearRating.innerHTML = `${displayedGenres.join(', ')} | ${\n      movie.release_date ? movie.release_date.substring(0, 4) : 'N/A'\n    } | `;\n  }\n\n  movieGenreYearRating.appendChild(ratingSpan);\n\n  movieGenreYearRating.classList.add('movie-details');\n\n  movieDescription.appendChild(movieTitle);\n  movieDescription.appendChild(movieGenreYearRating);\n\n  movieCard.appendChild(movieImage);\n  movieCard.appendChild(movieDescription);\n\n  movieContainer.appendChild(movieCard);\n  movieCard.addEventListener('click', () => {\n    openMovieModal(\n      movie.title,\n      movie.poster_path,\n      movie.vote_average,\n      movie.popularity,\n      displayedGenres,\n      movie.overview\n    );\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const searchInput = document.querySelector('.search-input');\n  const searchForm = document.querySelector('.search-bar');\n\n  searchForm.addEventListener('submit', async event => {\n    event.preventDefault();\n    const searchQuery = searchInput.value.trim();\n    await searchAndDisplayMovies(searchQuery);\n  });\n});\n"],"names":["async","$357b38b148c78c70$var$fetchData","endpoint","apiUrl","response","fetch","json","error","console","$357b38b148c78c70$var$roundRating","rating","Math","abs","ceil","floor","$357b38b148c78c70$export$b3a8255b03d81802","movieTitle","posterPath","popularity","genres","description","modalBackdrop","document","createElement","classList","add","addEventListener","event","target","$357b38b148c78c70$var$closeModal","modalContent","movieImage","src","alt","modalTitle","textContent","closeButton","modalMovieDescription","descriptionParagraph","innerHTML","descriptionContent","statsContainer","tagsContainer","resultsContainer","ratingTag","ratingResult","popularityTag","popularityResult","genresTag","genresResult","join","appendChild","buttonsContainer","addToWatchedButton","$357b38b148c78c70$var$createButton","addToQueueButton","body","style","display","overflow","remove","text","className","button","$59082835cf4f582e$var$getMovies","$59082835cf4f582e$var$searchMovies","title","url","options","ok","Error","$59082835cf4f582e$var$fetchData","method","headers","accept","$59082835cf4f582e$var$searchAndDisplayMovies","movies","$59082835cf4f582e$var$getPopularMovies","moviesContainer","getElementById","results","length","errorMessage","querySelector","hidden","movieContainer","id","$59082835cf4f582e$var$getGenres","forEach","movie","movieCard","poster_path","movieDescription","movieGenres","genre_ids","map","genreId","genre","find","g","name","displayedGenres","slice","otherGenres","roundedRating","vote_average","movieGenreYearRating","ratingSpan","release_date","substring","overview","$59082835cf4f582e$var$createMovieCard","window","onload","mainContent","$357b38b148c78c70$var$getPopularMovies","$357b38b148c78c70$var$getGenres","movieDetails","genresArray","searchInput","preventDefault","searchQuery","value","trim"],"version":3,"file":"index.c21d5217.js.map"}