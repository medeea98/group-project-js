{"mappings":"AAIAA,eAAeC,EAAUC,GACvB,MAAMC,EAAS,gCAAiBD,6CAEhC,IACE,MAAME,QAAiBC,MAAMF,GAE7B,aADmBC,EAASE,M,CAE5B,MAAOC,GACPC,QAAQD,MAAM,YAAYJ,IAAUI,E,EA4FxCE,OAAOC,OAxEPV,iBACE,MAAMW,EAAkBC,SAASC,cAAc,OAC/CF,EAAgBG,UAAUC,IAAI,UAE9B,MAAMC,EAAiBJ,SAASC,cAAc,OAC9CG,EAAeC,GAAK,kBAEpBN,EAAgBO,YAAYF,GAE5BJ,SAASO,KAAKD,YAAYP,GAE1B,MAAMS,QA3BRpB,iBACE,OAAOC,EAAU,sB,CA0BIoB,GACfC,QAxBRtB,iBACE,OAAOC,EAAU,mB,CAuBIsB,GAErBH,EAAOI,QAAQC,SAAQC,IACrB,MAAMC,EAAYf,SAASC,cAAc,OACzCc,EAAUb,UAAUC,IAAI,cAExB,MAAMa,EAAahB,SAASC,cAAc,OAC1Ce,EAAWC,IAAM,mCAAmCH,EAAMI,cAC1DF,EAAWG,IAAM,GAAGL,EAAMM,eAC1BJ,EAAWd,UAAUC,IAAI,eAEzB,MAAMkB,EAAmBrB,SAASC,cAAc,OAChDoB,EAAiBnB,UAAUC,IAAI,qBAE/B,MAAMmB,EAAatB,SAASC,cAAc,MAC1CqB,EAAWC,YAAcT,EAAMM,MAC/BE,EAAWpB,UAAUC,IAAI,eAEzB,MAAMqB,EAAcV,EAAMW,UAAUC,KAAIC,IACtC,MAAMC,EAAQlB,EAAOA,OAAOmB,MAAKC,GAAKA,EAAEzB,KAAOsB,IAC/C,OAAOC,EAAQA,EAAMG,KAAO,EAAE,IAG1BC,EAAkBR,EAAYS,MAAM,EAAG,GACvCC,EAAcV,EAAYS,MAAM,GAEhCE,GA9CWC,EA8CiBtB,EAAMuB,aA5CxCC,KAAKC,IAAIH,EAAS,IAAM,KACpBE,KAAKE,KAAc,IAATJ,GAAgB,IAC1BE,KAAKG,MAAe,IAATL,GAAgB,KAJnC,IAAqBA,EAgDjB,MAAMM,EAAuB1C,SAASC,cAAc,KAE9C0C,EAAa3C,SAASC,cAAc,QAC1C0C,EAAWzC,UAAUC,IAAI,UACzBwC,EAAWpB,YAAc,IAAIY,IAEzBD,EAAYU,OAAS,EACvBF,EAAqBG,UAAY,GAAGb,EAAgBc,KAClD,kBAEAhC,EAAMiC,aAAejC,EAAMiC,aAAaC,UAAU,EAAG,GAAK,WAG5DN,EAAqBG,UAAY,GAAGb,EAAgBc,KAAK,WACvDhC,EAAMiC,aAAejC,EAAMiC,aAAaC,UAAU,EAAG,GAAK,WAI9DN,EAAqBpC,YAAYqC,GAEjCD,EAAqBxC,UAAUC,IAAI,iBAEnCkB,EAAiBf,YAAYgB,GAC7BD,EAAiBf,YAAYoC,GAE7B3B,EAAUT,YAAYU,GACtBD,EAAUT,YAAYe,GAEtBjB,EAAeE,YAAYS,EAAU,G","sources":["src/js/films-section.js"],"sourcesContent":["const apiKey = '004a3a7ad0ebfa9ee53f6d0ac407af43';\nconst apiUrlBase = 'https://api.themoviedb.org/3';\nconst language = 'en-US';\n\nasync function fetchData(endpoint) {\n  const apiUrl = `${apiUrlBase}/${endpoint}?api_key=${apiKey}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error at ${apiUrl}`, error);\n  }\n}\n\nasync function getPopularMovies() {\n  return fetchData('trending/movie/week');\n}\n\nasync function getGenres() {\n  return fetchData('genre/movie/list');\n}\n\nfunction roundRating(rating) {\n  const roundedRating =\n    Math.abs(rating % 1) >= 0.005\n      ? Math.ceil(rating * 100) / 100\n      : Math.floor(rating * 100) / 100;\n  return roundedRating;\n}\n\nasync function displayMovies() {\n  const moviesContainer = document.createElement('div');\n  moviesContainer.classList.add('movies');\n\n  const movieContainer = document.createElement('div');\n  movieContainer.id = 'movie-container';\n\n  moviesContainer.appendChild(movieContainer);\n\n  document.body.appendChild(moviesContainer);\n\n  const movies = await getPopularMovies();\n  const genres = await getGenres();\n\n  movies.results.forEach(movie => {\n    const movieCard = document.createElement('div');\n    movieCard.classList.add('movie-card');\n\n    const movieImage = document.createElement('img');\n    movieImage.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    movieImage.alt = `${movie.title} Poster`;\n    movieImage.classList.add('movie-image');\n\n    const movieDescription = document.createElement('div');\n    movieDescription.classList.add('movie-description');\n\n    const movieTitle = document.createElement('h2');\n    movieTitle.textContent = movie.title;\n    movieTitle.classList.add('movie-title');\n\n    const movieGenres = movie.genre_ids.map(genreId => {\n      const genre = genres.genres.find(g => g.id === genreId);\n      return genre ? genre.name : '';\n    });\n\n    const displayedGenres = movieGenres.slice(0, 2);\n    const otherGenres = movieGenres.slice(2);\n\n    const roundedRating = roundRating(movie.vote_average);\n\n    const movieGenreYearRating = document.createElement('p');\n\n    const ratingSpan = document.createElement('span');\n    ratingSpan.classList.add('rating');\n    ratingSpan.textContent = ` ${roundedRating}`;\n\n    if (otherGenres.length > 0) {\n      movieGenreYearRating.innerHTML = `${displayedGenres.join(\n        ', '\n      )}, Other | ${\n        movie.release_date ? movie.release_date.substring(0, 4) : 'N/A'\n      } | `;\n    } else {\n      movieGenreYearRating.innerHTML = `${displayedGenres.join(', ')} | ${\n        movie.release_date ? movie.release_date.substring(0, 4) : 'N/A'\n      } | `;\n    }\n\n    movieGenreYearRating.appendChild(ratingSpan);\n\n    movieGenreYearRating.classList.add('movie-details');\n\n    movieDescription.appendChild(movieTitle);\n    movieDescription.appendChild(movieGenreYearRating);\n\n    movieCard.appendChild(movieImage);\n    movieCard.appendChild(movieDescription);\n\n    movieContainer.appendChild(movieCard);\n  });\n}\n\nwindow.onload = displayMovies;\n"],"names":["async","$357b38b148c78c70$var$fetchData","endpoint","apiUrl","response","fetch","json","error","console","window","onload","moviesContainer","document","createElement","classList","add","movieContainer","id","appendChild","body","movies","$357b38b148c78c70$var$getPopularMovies","genres","$357b38b148c78c70$var$getGenres","results","forEach","movie","movieCard","movieImage","src","poster_path","alt","title","movieDescription","movieTitle","textContent","movieGenres","genre_ids","map","genreId","genre","find","g","name","displayedGenres","slice","otherGenres","roundedRating","rating","vote_average","Math","abs","ceil","floor","movieGenreYearRating","ratingSpan","length","innerHTML","join","release_date","substring"],"version":3,"file":"index.60c2acff.js.map"}