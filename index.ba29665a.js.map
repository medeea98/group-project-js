{"mappings":"AAIAA,eAAeC,EAAUC,GACvB,MAAMC,EAAS,gCAAiBD,6CAEhC,IACE,MAAME,QAAiBC,MAAMF,GAE7B,aADmBC,EAASE,M,CAE5B,MAAOC,GACPC,QAAQD,MAAM,YAAYJ,IAAUI,E,EA4FxCE,OAAOC,OAxEPV,iBACE,MAAMW,EAAkBC,SAASC,cAAc,OAC/CF,EAAgBG,UAAUC,IAAI,UAE9B,MAAMC,EAAiBJ,SAASC,cAAc,OAC9CG,EAAeC,GAAK,kBAEpBN,EAAgBO,YAAYF,GAE5BJ,SAASO,KAAKD,YAAYP,GAE1B,MAAMS,QA3BRpB,iBACE,OAAOC,EAAU,sB,CA0BIoB,GACfC,QAxBRtB,iBACE,OAAOC,EAAU,mB,CAuBIsB,GAErBH,EAAOI,QAAQC,SAAQC,IACrB,MAAMC,EAAYf,SAASC,cAAc,OACzCc,EAAUb,UAAUC,IAAI,cAExB,MAAMa,EAAahB,SAASC,cAAc,OAC1Ce,EAAWC,IAAM,mCAAmCH,EAAMI,cAC1DF,EAAWG,IAAM,GAAGL,EAAMM,eAC1BJ,EAAWd,UAAUC,IAAI,eAEzB,MAAMkB,EAAmBrB,SAASC,cAAc,OAChDoB,EAAiBnB,UAAUC,IAAI,qBAE/B,MAAMmB,EAAatB,SAASC,cAAc,MAC1CqB,EAAWC,YAAcT,EAAMM,MAC/BE,EAAWpB,UAAUC,IAAI,eAEzB,MAAMqB,EAAcV,EAAMW,UAAUC,KAAIC,IACtC,MAAMC,EAAQlB,EAAOA,OAAOmB,MAAKC,GAAKA,EAAEzB,KAAOsB,IAC/C,OAAOC,EAAQA,EAAMG,KAAO,EAAE,IAG1BC,EAAkBR,EAAYS,MAAM,EAAG,GACvCC,EAAcV,EAAYS,MAAM,GAEhCE,GA9CWC,EA8CiBtB,EAAMuB,aA5CxCC,KAAKC,IAAIH,EAAS,IAAM,KACpBE,KAAKE,KAAc,IAATJ,GAAgB,IAC1BE,KAAKG,MAAe,IAATL,GAAgB,KAJnC,IAAqBA,EAgDjB,MAAMM,EAAuB1C,SAASC,cAAc,KAE9C0C,EAAa3C,SAASC,cAAc,QAC1C0C,EAAWzC,UAAUC,IAAI,UACzBwC,EAAWpB,YAAc,IAAIY,IAEzBD,EAAYU,OAAS,EACvBF,EAAqBG,UAAY,GAAGb,EAAgBc,KAClD,kBAEAhC,EAAMiC,aAAejC,EAAMiC,aAAaC,UAAU,EAAG,GAAK,WAG5DN,EAAqBG,UAAY,GAAGb,EAAgBc,KAAK,WACvDhC,EAAMiC,aAAejC,EAAMiC,aAAaC,UAAU,EAAG,GAAK,WAI9DN,EAAqBpC,YAAYqC,GAEjCD,EAAqBxC,UAAUC,IAAI,iBAEnCkB,EAAiBf,YAAYgB,GAC7BD,EAAiBf,YAAYoC,GAE7B3B,EAAUT,YAAYU,GACtBD,EAAUT,YAAYe,GAEtBjB,EAAeE,YAAYS,EAAU,G,ECpGzCf,SAASiD,iBAAiB,oBAAoB,WAC1C,MAAMC,EAAmBlD,SAASmD,cAAc,sBAC1CC,EAAYpD,SAASmD,cAAc,eACnCE,EAAarD,SAASmD,cAAc,gBAI1C,IAAIG,EAAc,EAElB,SAASC,EAAgBC,EAAWC,GAChCP,EAAiBL,UAAY,GAC7B,IAAK,IAAIa,EAAIF,EAAWE,GAAKD,EAASC,IAAK,CACvC,MAAMC,EAAS3D,SAASC,cAAc,OACtC0D,EAAOzD,UAAUC,IAAI,UACrBwD,EAAOpC,YAAcmC,EACjBA,IAAMJ,GACNK,EAAOzD,UAAUC,IAAI,UAEzBwD,EAAOV,iBAAiB,SAAS,WAC7BK,EAAcI,EACdH,EAAgBK,IAAgBC,I,IAEpCX,EAAiB5C,YAAYqD,E,EAIrC,SAASC,IACL,OAAOtB,KAAKwB,IAAI,EAAGR,EAAchB,KAAKG,MAAMsB,K,CAGhD,SAASF,IACL,OAAOvB,KAAK0B,IA1BG,GA0BaJ,IAzBX,EAyB2C,E,CAGhE,SAASK,IAEDb,EAAUc,MAAMC,QADA,IAAhBb,EAC0B,OAEA,QAI1BD,EAAWa,MAAMC,QArCN,KAoCXb,EAC2B,OAEA,O,CAInCF,EAAUH,iBAAiB,SAAS,WAC5BK,EAAc,IACdA,IACAC,EAAgBK,IAAgBC,KAChCI,I,IAIRZ,EAAWJ,iBAAiB,SAAS,WAC7BK,EApDW,KAqDXA,IACAC,EAAgBK,IAAgBC,KAChCI,I,IAKRV,EAAgBK,IAAgBC,KAChCI,G,ICjEQjE,SAASoE,eAAe,WCDpC,IAAAC,EAAe,CACbC,YAAatE,SAASmD,cAAc,gBACpCoB,SAAUvE,SAASmD,cAAc,aACjCqB,cAAexE,SAASmD,cAAc,gBACtCsB,UAAWzE,SAASmD,cAAc,WAClCuB,WAAY1E,SAASmD,cAAc,eACnCwB,cAAe3E,SAASmD,cAAc,sBCWxC/D,eAAewF,EAAUtF,GACvB,MAAMC,EAAS,gCAAiBD,6CAEhC,IACE,MAAME,QAAiBC,MAAMF,GAE7B,aADmBC,EAASE,M,CAE5B,MAAOC,GACPC,QAAQD,MAAM,YAAYJ,IAAUI,E,EAYxCP,eAAeyF,EAAazD,GAC1B,MAAM7B,EAAS,4FAAsD6B,8CASrE,aA5CFhC,eAAyB0F,EAAKC,GAC5B,IACE,MAAMvF,QAAiBC,MAAMqF,EAAKC,GAClC,IAAKvF,EAASwF,GACZ,MAAM,IAAIC,MAAM,+BAGlB,aADmBzF,EAASE,M,CAE5B,MAAOC,GAEP,OADAC,QAAQD,MAAM,uBAAwBA,GAC/B,I,EAkCIuF,CAAU3F,EAPP,CACd4F,OAAQ,MACRC,QAAS,CACPC,OAAQ,qB,CAedjG,eAAekG,EAAuBlE,GACpC,IAAIZ,EAEFA,EADEY,QACayD,EAAazD,SA5BhChC,iBACE,OAAOwF,EAAU,uB,CA6BAW,GAGjB,MAAMxF,EAAkBC,SAASoE,eAAe,mBAGhD,GAFArE,EAAgB8C,UAAY,GAEE,IAA1BrC,EAAOI,QAAQgC,OAAc,CAC/B,MAAM4C,EAAexF,SAASC,cAAc,KAC5CuF,EAAajE,YAAc,4CAC3BxB,EAAgBO,YAAYkF,GAC5BxF,SAASmD,cAAc,WAAWsC,QAAS,C,KACtC,CACLzF,SAASmD,cAAc,WAAWuC,SAClC,MAAM3F,EAAkBC,SAASC,cAAc,OAC/CF,EAAgBG,UAAUC,IAAI,UAE9B,MAAMC,EAAiBJ,SAASC,cAAc,OAC9CG,EAAeC,GAAK,kBAEpBN,EAAgBO,YAAYF,GAE5BJ,SAASO,KAAKD,YAAYP,GAE1B,MAAMW,QAzDVtB,iBACE,OAAOwF,EAAU,oB,CAwDMe,GAErBnF,EAAOI,QAAQC,SAAQC,KAM3B,SAAyBA,EAAOJ,EAAQN,GACtC,MAAMW,EAAYf,SAASC,cAAc,OACzCc,EAAUb,UAAUC,IAAI,cAExB,MAAMa,EAAahB,SAASC,cAAc,OAC1Ce,EAAWC,IAAM,mCAAmCH,EAAMI,cAC1DF,EAAWG,IAAM,GAAGL,EAAMM,eAC1BJ,EAAWd,UAAUC,IAAI,eAEzB,MAAMkB,EAAmBrB,SAASC,cAAc,OAChDoB,EAAiBnB,UAAUC,IAAI,qBAE/B,MAAMmB,EAAatB,SAASC,cAAc,MAC1CqB,EAAWC,YAAcT,EAAMM,MAC/BE,EAAWpB,UAAUC,IAAI,eAEzB,MAAMqB,EAAcV,EAAMW,UAAUC,KAAIC,IACtC,MAAMC,EAAQlB,EAAOA,OAAOmB,MAAKC,GAAKA,EAAEzB,KAAOsB,IAC/C,OAAOC,EAAQA,EAAMG,KAAO,EAAE,IAG1BC,EAAkBR,EAAYS,MAAM,EAAG,GACvCC,EAAcV,EAAYS,MAAM,GAEhCE,GApEaC,EAoEetB,EAAMuB,aAlEtCC,KAAKC,IAAIH,EAAS,IAAM,KACpBE,KAAKE,KAAc,IAATJ,GAAgB,IAC1BE,KAAKG,MAAe,IAATL,GAAgB,KAkE3BM,EAAuB1C,SAASC,cAAc,KAE9C0C,EAAa3C,SAASC,cAAc,QAxE5C,IAAqBmC,EAyEnBO,EAAWzC,UAAUC,IAAI,UACzBwC,EAAWpB,YAAc,IAAIY,IAEzBD,EAAYU,OAAS,EACvBF,EAAqBG,UAAY,GAAGb,EAAgBc,KAClD,kBAEAhC,EAAMiC,aAAejC,EAAMiC,aAAaC,UAAU,EAAG,GAAK,WAG5DN,EAAqBG,UAAY,GAAGb,EAAgBc,KAAK,WACvDhC,EAAMiC,aAAejC,EAAMiC,aAAaC,UAAU,EAAG,GAAK,WAI9DN,EAAqBpC,YAAYqC,GAEjCD,EAAqBxC,UAAUC,IAAI,iBAEnCkB,EAAiBf,YAAYgB,GAC7BD,EAAiBf,YAAYoC,GAE7B3B,EAAUT,YAAYU,GACtBD,EAAUT,YAAYe,GAEtBjB,EAAeE,YAAYS,E,CA3DvB6E,CAAgB9E,EAAOJ,EAAQN,EAAe,G,EA8DpDJ,SAASiD,iBAAiB,oBAAoB,KAC5C,MAAM4C,EAAc7F,SAASmD,cAAc,iBACxBnD,SAASmD,cAAc,eAE/BF,iBAAiB,UAAU7D,MAAM0G,IAC1CA,EAAMC,iBACN,MAAMC,EAAcH,EAAYI,MAAMC,aAChCZ,EAAuBU,EAAY,GACzC,ICxJJ3B,EAAKE,SAAStB,iBAAiB,SAN/B,WACEoB,EAAKK,WAAWxE,UAAUwF,OAAO,mBACjCrB,EAAKG,cAActE,UAAUC,IAAI,mBACjCkE,EAAKM,cAAczE,UAAUC,IAAI,oBACjCkE,EAAKM,cAAczE,UAAUwF,OAAO,iB,ICGtCrB,EAAKC,YAAYrB,iBAAiB,SANlC,WACEoB,EAAKK,WAAWxE,UAAUC,IAAI,mBAC9BkE,EAAKG,cAActE,UAAUwF,OAAO,mBACpCrB,EAAKM,cAAczE,UAAUwF,OAAO,oBACpCrB,EAAKM,cAAczE,UAAUC,IAAI,iB","sources":["src/js/films-section.js","src/js/footer.js","src/js/modal-footer.js","src/js/refs.js","src/js/searchbar.js","src/js/home.js","src/js/js-library.js"],"sourcesContent":["const apiKey = '004a3a7ad0ebfa9ee53f6d0ac407af43';\nconst apiUrlBase = 'https://api.themoviedb.org/3';\nconst language = 'en-US';\n\nasync function fetchData(endpoint) {\n  const apiUrl = `${apiUrlBase}/${endpoint}?api_key=${apiKey}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error at ${apiUrl}`, error);\n  }\n}\n\nasync function getPopularMovies() {\n  return fetchData('trending/movie/week');\n}\n\nasync function getGenres() {\n  return fetchData('genre/movie/list');\n}\n\nfunction roundRating(rating) {\n  const roundedRating =\n    Math.abs(rating % 1) >= 0.005\n      ? Math.ceil(rating * 100) / 100\n      : Math.floor(rating * 100) / 100;\n  return roundedRating;\n}\n\nasync function displayMovies() {\n  const moviesContainer = document.createElement('div');\n  moviesContainer.classList.add('movies');\n\n  const movieContainer = document.createElement('div');\n  movieContainer.id = 'movie-container';\n\n  moviesContainer.appendChild(movieContainer);\n\n  document.body.appendChild(moviesContainer);\n\n  const movies = await getPopularMovies();\n  const genres = await getGenres();\n\n  movies.results.forEach(movie => {\n    const movieCard = document.createElement('div');\n    movieCard.classList.add('movie-card');\n\n    const movieImage = document.createElement('img');\n    movieImage.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    movieImage.alt = `${movie.title} Poster`;\n    movieImage.classList.add('movie-image');\n\n    const movieDescription = document.createElement('div');\n    movieDescription.classList.add('movie-description');\n\n    const movieTitle = document.createElement('h2');\n    movieTitle.textContent = movie.title;\n    movieTitle.classList.add('movie-title');\n\n    const movieGenres = movie.genre_ids.map(genreId => {\n      const genre = genres.genres.find(g => g.id === genreId);\n      return genre ? genre.name : '';\n    });\n\n    const displayedGenres = movieGenres.slice(0, 2);\n    const otherGenres = movieGenres.slice(2);\n\n    const roundedRating = roundRating(movie.vote_average);\n\n    const movieGenreYearRating = document.createElement('p');\n\n    const ratingSpan = document.createElement('span');\n    ratingSpan.classList.add('rating');\n    ratingSpan.textContent = ` ${roundedRating}`;\n\n    if (otherGenres.length > 0) {\n      movieGenreYearRating.innerHTML = `${displayedGenres.join(\n        ', '\n      )}, Other | ${\n        movie.release_date ? movie.release_date.substring(0, 4) : 'N/A'\n      } | `;\n    } else {\n      movieGenreYearRating.innerHTML = `${displayedGenres.join(', ')} | ${\n        movie.release_date ? movie.release_date.substring(0, 4) : 'N/A'\n      } | `;\n    }\n\n    movieGenreYearRating.appendChild(ratingSpan);\n\n    movieGenreYearRating.classList.add('movie-details');\n\n    movieDescription.appendChild(movieTitle);\n    movieDescription.appendChild(movieGenreYearRating);\n\n    movieCard.appendChild(movieImage);\n    movieCard.appendChild(movieDescription);\n\n    movieContainer.appendChild(movieCard);\n  });\n}\n\nwindow.onload = displayMovies;\n","document.addEventListener(\"DOMContentLoaded\", function () {\n    const numbersContainer = document.querySelector('.numbers-container');\n    const leftArrow = document.querySelector('.left-arrow');\n    const rightArrow = document.querySelector('.right-arrow');\n\n    const totalPages = 20;\n    const itemsPerPage = 7;\n    let currentPage = 1;\n\n    function generateNumbers(startPage, endPage) {\n        numbersContainer.innerHTML = '';\n        for (let i = startPage; i <= endPage; i++) {\n            const number = document.createElement('div');\n            number.classList.add('number');\n            number.textContent = i;\n            if (i === currentPage) {\n                number.classList.add('active');\n            }\n            number.addEventListener('click', function () {\n                currentPage = i;\n                generateNumbers(getStartPage(), getEndPage());\n            });\n            numbersContainer.appendChild(number);\n        }\n    }\n\n    function getStartPage() {\n        return Math.max(1, currentPage - Math.floor(itemsPerPage / 2));\n    }\n\n    function getEndPage() {\n        return Math.min(totalPages, getStartPage() + itemsPerPage - 1);\n    }\n\n    function updatePagination() {\n        if (currentPage === 1) {\n            leftArrow.style.display = 'none';\n        } else {\n            leftArrow.style.display = 'block';\n        }\n\n        if (currentPage === totalPages) {\n            rightArrow.style.display = 'none';\n        } else {\n            rightArrow.style.display = 'block';\n        }\n    }\n\n    leftArrow.addEventListener('click', function () {\n        if (currentPage > 1) {\n            currentPage--;\n            generateNumbers(getStartPage(), getEndPage());\n            updatePagination();\n        }\n    });\n\n    rightArrow.addEventListener('click', function () {\n        if (currentPage < totalPages) {\n            currentPage++;\n            generateNumbers(getStartPage(), getEndPage());\n            updatePagination();\n        }\n    });\n\n    // Initialize pagination\n    generateNumbers(getStartPage(), getEndPage());\n    updatePagination();\n});\n","\nvar modal = document.getElementById('myModal');\n\n\nfunction openModal() {\n    modal.style.display = 'block';\n\n    window.addEventListener('keydown', closeModalOnEscape);\n    window.addEventListener('click', closeModalOnClickOutside);\n}\n\n\nfunction closeModal() {\n    modal.style.display = 'none';\n    \n    window.removeEventListener('keydown', closeModalOnEscape);\n    window.removeEventListener('click', closeModalOnClickOutside);\n}\n\n\nfunction closeModalOnEscape(event) {\n    if (event.key === 'Escape' && modal.style.display === 'block') {\n        closeModal();\n    }\n}\n\n\nfunction closeModalOnClickOutside(event) {\n    if (event.target === modal) {\n        closeModal();\n    }\n}\n\n","export default {\n  libraryLink: document.querySelector('.library-btn'),\n  homeLink: document.querySelector('.home-btn'),\n  headerButtons: document.querySelector('.list-button'),\n  filmsList: document.querySelector('.movies'),\n  headerForm: document.querySelector('.search-bar'),\n  libraryHeader: document.querySelector('.container-header'),\n};\n","// searchbar.js\nimport { apiKey, apiUrlBase } from './api-key.js';\n\nasync function fetchData(url, options) {\n  try {\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return null;\n  }\n}\n\nasync function getMovies(endpoint) {\n  const apiUrl = `${apiUrlBase}/${endpoint}?api_key=${apiKey}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error at ${apiUrl}`, error);\n  }\n}\n\nasync function getGenres() {\n  return getMovies('/genre/movie/list');\n}\n\nasync function getPopularMovies() {\n  return getMovies('/trending/movie/week');\n}\n  \nasync function searchMovies(title) {\n  const apiUrl = `${apiUrlBase}/search/movie?api_key=${apiKey}&query=${title}&language=en-US&include_adult=false&page=1`;\n\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n    }\n  };\n\n  return await fetchData(apiUrl, options);\n}\n\nfunction roundRating(rating) {\n  const roundedRating =\n    Math.abs(rating % 1) >= 0.005\n      ? Math.ceil(rating * 100) / 100\n      : Math.floor(rating * 100) / 100;\n  return roundedRating;\n}\n  \nasync function searchAndDisplayMovies(title) {\n  let movies;\n  if (title) {\n    movies = await searchMovies(title);\n  } else {\n    movies = await getPopularMovies();\n  }\n\n  const moviesContainer = document.getElementById('movie-container');\n  moviesContainer.innerHTML = '';\n\n  if (movies.results.length === 0) {\n    const errorMessage = document.createElement('p');\n    errorMessage.textContent = 'Nu s-au găsit filme pentru căutarea dată.';\n    moviesContainer.appendChild(errorMessage);\n    document.querySelector('.movies').hidden = true;\n  } else {\n    document.querySelector('.movies').remove();\n    const moviesContainer = document.createElement('div');\n    moviesContainer.classList.add('movies');\n  \n    const movieContainer = document.createElement('div');\n    movieContainer.id = 'movie-container';\n  \n    moviesContainer.appendChild(movieContainer);\n  \n    document.body.appendChild(moviesContainer);\n\n    const genres = await getGenres();\n    \n    movies.results.forEach(movie => {\n      createMovieCard(movie, genres, movieContainer);\n    });\n  }\n}\n\nfunction createMovieCard(movie, genres, movieContainer) {\n  const movieCard = document.createElement('div');\n  movieCard.classList.add('movie-card');\n\n  const movieImage = document.createElement('img');\n  movieImage.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n  movieImage.alt = `${movie.title} Poster`;\n  movieImage.classList.add('movie-image');\n\n  const movieDescription = document.createElement('div');\n  movieDescription.classList.add('movie-description');\n\n  const movieTitle = document.createElement('h2');\n  movieTitle.textContent = movie.title;\n  movieTitle.classList.add('movie-title');\n\n  const movieGenres = movie.genre_ids.map(genreId => {\n    const genre = genres.genres.find(g => g.id === genreId);\n    return genre ? genre.name : '';\n  });\n\n  const displayedGenres = movieGenres.slice(0, 2);\n  const otherGenres = movieGenres.slice(2);\n\n  const roundedRating = roundRating(movie.vote_average);\n\n  const movieGenreYearRating = document.createElement('p');\n\n  const ratingSpan = document.createElement('span');\n  ratingSpan.classList.add('rating');\n  ratingSpan.textContent = ` ${roundedRating}`;\n\n  if (otherGenres.length > 0) {\n    movieGenreYearRating.innerHTML = `${displayedGenres.join(\n      ', '\n    )}, Other | ${\n      movie.release_date ? movie.release_date.substring(0, 4) : 'N/A'\n    } | `;\n  } else {\n    movieGenreYearRating.innerHTML = `${displayedGenres.join(', ')} | ${\n      movie.release_date ? movie.release_date.substring(0, 4) : 'N/A'\n    } | `;\n  }\n\n  movieGenreYearRating.appendChild(ratingSpan);\n\n  movieGenreYearRating.classList.add('movie-details');\n\n  movieDescription.appendChild(movieTitle);\n  movieDescription.appendChild(movieGenreYearRating);\n\n  movieCard.appendChild(movieImage);\n  movieCard.appendChild(movieDescription);\n\n  movieContainer.appendChild(movieCard);\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const searchInput = document.querySelector('.search-input');\n  const searchForm = document.querySelector('.search-bar');\n\n  searchForm.addEventListener('submit', async event => {\n    event.preventDefault();\n    const searchQuery = searchInput.value.trim();\n    await searchAndDisplayMovies(searchQuery);\n  });\n})\n","import refs from './refs.js';\nfunction onLoadHomePage() {\n  refs.headerForm.classList.remove('visually-hidden');\n  refs.headerButtons.classList.add('visually-hidden');\n  refs.libraryHeader.classList.add('container-header');\n  refs.libraryHeader.classList.remove('library-header');\n}\nrefs.homeLink.addEventListener('click', onLoadHomePage);\n","import refs from './refs.js';\n\nfunction onLoadLibraryPage() {\n  refs.headerForm.classList.add('visually-hidden');\n  refs.headerButtons.classList.remove('visually-hidden');\n  refs.libraryHeader.classList.remove('container-header');\n  refs.libraryHeader.classList.add('library-header');\n}\nrefs.libraryLink.addEventListener('click', onLoadLibraryPage);\n"],"names":["async","$357b38b148c78c70$var$fetchData","endpoint","apiUrl","response","fetch","json","error","console","window","onload","moviesContainer","document","createElement","classList","add","movieContainer","id","appendChild","body","movies","$357b38b148c78c70$var$getPopularMovies","genres","$357b38b148c78c70$var$getGenres","results","forEach","movie","movieCard","movieImage","src","poster_path","alt","title","movieDescription","movieTitle","textContent","movieGenres","genre_ids","map","genreId","genre","find","g","name","displayedGenres","slice","otherGenres","roundedRating","rating","vote_average","Math","abs","ceil","floor","movieGenreYearRating","ratingSpan","length","innerHTML","join","release_date","substring","addEventListener","numbersContainer","querySelector","leftArrow","rightArrow","currentPage","generateNumbers","startPage","endPage","i","number","getStartPage","getEndPage","max","itemsPerPage","min","updatePagination","style","display","getElementById","$ee27a4d7c64fc8c4$export$2e2bcd8739ae039","libraryLink","homeLink","headerButtons","filmsList","headerForm","libraryHeader","$59082835cf4f582e$var$getMovies","$59082835cf4f582e$var$searchMovies","url","options","ok","Error","$59082835cf4f582e$var$fetchData","method","headers","accept","$59082835cf4f582e$var$searchAndDisplayMovies","$59082835cf4f582e$var$getPopularMovies","errorMessage","hidden","remove","$59082835cf4f582e$var$getGenres","$59082835cf4f582e$var$createMovieCard","searchInput","event","preventDefault","searchQuery","value","trim"],"version":3,"file":"index.ba29665a.js.map"}