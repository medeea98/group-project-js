{"mappings":"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","sources":["src/js/films-section.js"],"sourcesContent":["const apiKey = '004a3a7ad0ebfa9ee53f6d0ac407af43';\nconst apiUrlBase = 'https://api.themoviedb.org/3';\nconst language = 'en-US';\n\nasync function fetchData(endpoint) {\n  const apiUrl = `${apiUrlBase}/${endpoint}?api_key=${apiKey}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error at ${apiUrl}`, error);\n  }\n}\n\nasync function getPopularMovies() {\n  return fetchData('trending/movie/week');\n}\n\nasync function getGenres() {\n  return fetchData('genre/movie/list');\n}\n\nfunction roundRating(rating) {\n  const roundedRating =\n    Math.abs(rating % 1) >= 0.005\n      ? Math.ceil(rating * 100) / 100\n      : Math.floor(rating * 100) / 100;\n  return roundedRating;\n}\n\nasync function displayMovies() {\n  const moviesContainer = document.createElement('div');\n  moviesContainer.classList.add('movies');\n\n  const movieContainer = document.createElement('div');\n  movieContainer.id = 'movie-container';\n\n  moviesContainer.appendChild(movieContainer);\n\n  document.body.appendChild(moviesContainer);\n\n  const movies = await getPopularMovies();\n  const genres = await getGenres();\n\n  movies.results.forEach(movie => {\n    const movieCard = document.createElement('div');\n    movieCard.classList.add('movie-card');\n\n    const movieImage = document.createElement('img');\n    movieImage.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    movieImage.alt = `${movie.title} Poster`;\n    movieImage.classList.add('movie-image');\n\n    const movieDescription = document.createElement('div');\n    movieDescription.classList.add('movie-description');\n\n    const movieTitle = document.createElement('h2');\n    movieTitle.textContent = movie.title;\n    movieTitle.classList.add('movie-title');\n\n    const movieGenres = movie.genre_ids.map(genreId => {\n      const genre = genres.genres.find(g => g.id === genreId);\n      return genre ? genre.name : '';\n    });\n\n    const displayedGenres = movieGenres.slice(0, 2);\n    const otherGenres = movieGenres.slice(2);\n\n    const roundedRating = roundRating(movie.vote_average);\n\n    const movieGenreYearRating = document.createElement('p');\n\n    const ratingSpan = document.createElement('span');\n    ratingSpan.classList.add('rating');\n    ratingSpan.textContent = ` ${roundedRating}`;\n\n    if (otherGenres.length > 0) {\n      movieGenreYearRating.innerHTML = `${displayedGenres.join(\n        ', '\n      )}, Other | ${\n        movie.release_date ? movie.release_date.substring(0, 4) : 'N/A'\n      } | `;\n    } else {\n      movieGenreYearRating.innerHTML = `${displayedGenres.join(', ')} | ${\n        movie.release_date ? movie.release_date.substring(0, 4) : 'N/A'\n      } | `;\n    }\n\n    movieGenreYearRating.appendChild(ratingSpan);\n\n    movieGenreYearRating.classList.add('movie-details');\n\n    movieDescription.appendChild(movieTitle);\n    movieDescription.appendChild(movieGenreYearRating);\n\n    movieCard.appendChild(movieImage);\n    movieCard.appendChild(movieDescription);\n\n    movieContainer.appendChild(movieCard);\n  });\n}\n\nwindow.onload = displayMovies;\n"],"names":["$bpxeT","parcelRequire","$bd617404f1f74309$var$apiKey","$bd617404f1f74309$var$apiUrlBase","$bd617404f1f74309$var$fetchData","endpoint","$bd617404f1f74309$var$_fetchData","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","apiUrl","response","data","concat","fetch","_ctx","sent","json","console","error","t0","$bd617404f1f74309$var$getPopularMovies","$bd617404f1f74309$var$_getPopularMovies","$bd617404f1f74309$var$getGenres","$bd617404f1f74309$var$_getGenres","$bd617404f1f74309$var$roundRating","rating","Math","abs","ceil","floor","$bd617404f1f74309$var$_displayMovies","moviesContainer","movieContainer","movies","genres","document","createElement","classList","add","id","appendChild","body","results","forEach","movie","movieCard","movieImage","src","poster_path","alt","title","movieDescription","movieTitle","textContent","movieGenres","genre_ids","map","genreId","genre","find","g","name","displayedGenres","slice","otherGenres","roundedRating","vote_average","movieGenreYearRating","ratingSpan","length","innerHTML","join","release_date","substring","window","onload"],"version":3,"file":"index.86dc7414.js.map"}