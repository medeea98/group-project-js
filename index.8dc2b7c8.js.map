{"mappings":"AAiBEA,eAAeC,EAAoBC,GACjC,MAAMC,EAAS,4FAAsDD,cAAkBE,sCAEjFC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAAUC,gBAI7B,aAzBJV,eAAyBW,EAAKN,GAC1B,IACE,MAAMO,QAAiBC,MAAMF,EAAKN,GAClC,IAAKO,EAASE,GACZ,MAAM,IAAIC,MAAM,+BAGlB,aADmBH,EAASI,M,CAE5B,MAAOC,GAEP,OADAC,QAAQD,MAAM,uBAAwBA,GAC/B,I,EAeIE,CAAUhB,EAAQE,E,CAGjCL,eAAeoB,EAAuBlB,GACpC,MAAMmB,QAAepB,EAAoBC,GAEnCoB,EAAkBC,SAASC,eAAe,mBAGhD,GAFAF,EAAgBG,UAAY,GAEN,IAAlBJ,EAAOK,OAAc,CACvB,MAAMC,EAAeJ,SAASK,cAAc,KAC5CD,EAAaE,YAAc,4CAC3BP,EAAgBQ,YAAYH,E,MAE5BN,EAAOU,SAAQC,IACb,MAAMC,EAKZ,SAAyBD,GACvB,MAAMC,EAAYV,SAASK,cAAc,OACzCK,EAAUC,UAAUC,IAAI,cAExB,MAAMC,EAAab,SAASK,cAAc,OAC1CQ,EAAWC,IAAM,mCAAmCL,EAAMM,cAC1DF,EAAWG,IAAM,GAAGP,EAAM9B,eAC1BkC,EAAWF,UAAUC,IAAI,eAEzB,MAAMK,EAAmBjB,SAASK,cAAc,OAChDY,EAAiBN,UAAUC,IAAI,qBAE/B,MAAMM,EAAalB,SAASK,cAAc,MAC1Ca,EAAWZ,YAAcG,EAAM9B,MAC/BuC,EAAWP,UAAUC,IAAI,eAEzB,MAAMO,EAAuBnB,SAASK,cAAc,KAUpD,OATAc,EAAqBR,UAAUC,IAAI,iBACnCO,EAAqBb,YAAc,iBAAiBG,EAAMW,yBAAyBX,EAAMY,eAEzFJ,EAAiBV,YAAYW,GAC7BD,EAAiBV,YAAYY,GAE7BT,EAAUH,YAAYM,GACtBH,EAAUH,YAAYU,GAEfP,C,CA/BeY,CAAgBb,GAClCV,EAAgBQ,YAAYG,EAAU,G,CAiC5Ca,OAAOC,OAAS,KACd,MAAMC,EAAczB,SAASC,eAAe,gBACzBD,SAASC,eAAe,cAEhCyB,iBAAiB,UAAUjD,MAAMkD,IAC1CA,EAAMC,iBACN,MAAMC,EAAcJ,EAAYK,MAAMC,OAClB,KAAhBF,SACIhC,EAAuBgC,EAAY,GAE3C","sources":["src/js/searchbar.js"],"sourcesContent":["// searchbar.js\nimport { apiKey, apiUrlBase } from './api-key.js';\n\nasync function fetchData(url, options) {\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      return null;\n    }\n  }\n  \n  async function searchMoviesByTitle(title) {\n    const apiUrl = `${apiUrlBase}/search/movie?api_key=${apiKey}&query=${title}&language=${language}&include_adult=false&page=1`;\n  \n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    };\n  \n    return await fetchData(apiUrl, options);\n  }\n  \n  async function searchAndDisplayMovies(title) {\n    const movies = await searchMoviesByTitle(title);\n  \n    const moviesContainer = document.getElementById('movie-container');\n    moviesContainer.innerHTML = '';\n  \n    if (movies.length === 0) {\n      const errorMessage = document.createElement('p');\n      errorMessage.textContent = 'Nu s-au găsit filme pentru căutarea dată.';\n      moviesContainer.appendChild(errorMessage);\n    } else {\n      movies.forEach(movie => {\n        const movieCard = createMovieCard(movie);\n        moviesContainer.appendChild(movieCard);\n      });\n    }\n  }\n  function createMovieCard(movie) {\n    const movieCard = document.createElement('div');\n    movieCard.classList.add('movie-card');\n  \n    const movieImage = document.createElement('img');\n    movieImage.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    movieImage.alt = `${movie.title} Poster`;\n    movieImage.classList.add('movie-image');\n  \n    const movieDescription = document.createElement('div');\n    movieDescription.classList.add('movie-description');\n  \n    const movieTitle = document.createElement('h2');\n    movieTitle.textContent = movie.title;\n    movieTitle.classList.add('movie-title');\n  \n    const movieGenreYearRating = document.createElement('p');\n    movieGenreYearRating.classList.add('movie-details');\n    movieGenreYearRating.textContent = `Release Date: ${movie.release_date}, Rating: ${movie.vote_average}`;\n  \n    movieDescription.appendChild(movieTitle);\n    movieDescription.appendChild(movieGenreYearRating);\n  \n    movieCard.appendChild(movieImage);\n    movieCard.appendChild(movieDescription);\n  \n    return movieCard;\n  }\n  \n  window.onload = () => {\n    const searchInput = document.getElementById('search-input');\n    const searchForm = document.getElementById('search-bar');\n  \n    searchForm.addEventListener('submit', async event => {\n      event.preventDefault();\n      const searchQuery = searchInput.value.trim();\n      if (searchQuery !== '') {\n        await searchAndDisplayMovies(searchQuery);\n      }\n    });\n  };\n\n\n"],"names":["async","$59082835cf4f582e$var$searchMoviesByTitle","title","apiUrl","language","options","method","headers","accept","Authorization","accessToken","url","response","fetch","ok","Error","json","error","console","$59082835cf4f582e$var$fetchData","$59082835cf4f582e$var$searchAndDisplayMovies","movies","moviesContainer","document","getElementById","innerHTML","length","errorMessage","createElement","textContent","appendChild","forEach","movie","movieCard","classList","add","movieImage","src","poster_path","alt","movieDescription","movieTitle","movieGenreYearRating","release_date","vote_average","$59082835cf4f582e$var$createMovieCard","window","onload","searchInput","addEventListener","event","preventDefault","searchQuery","value","trim"],"version":3,"file":"index.8dc2b7c8.js.map"}